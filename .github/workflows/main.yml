name: WordPress PRO Security Scan
on:
  workflow_dispatch:
    inputs:
      target_url:
        description: '🎯 URL du site WordPress à scanner'
        required: true
        type: string
        placeholder: 'https://example.com'
      scan_mode:
        description: '⚡ Mode de scan'
        required: true
        default: 'full'
        type: choice
        options:
        - quick
        - full
        - aggressive
  schedule:
    - cron: '0 2 * * *'  # Tous les jours à 2h

jobs:
  wordpress-pro-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Validate target URL
      run: |
        echo "🎯 Target URL: ${{ github.event.inputs.target_url }}"
        if [[ ! ${{ github.event.inputs.target_url }} =~ ^https?:// ]]; then
          echo "❌ ERROR: URL must start with http:// or https://"
          exit 1
        fi
        echo "✅ URL validation passed"
        
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y git python3 python3-pip golang-go ruby nmap nikto
        
    # === NUCLEI ===
    - name: Install Nuclei
      run: |
        go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest
        export PATH=$PATH:$(go env GOPATH)/bin
        nuclei -update-templates
        
    # === WPSCAN ===  
    - name: Install WPScan
      run: |
        gem install wpscan --user-install
        export PATH="$HOME/.local/share/gem/ruby/3.2.0/bin:$PATH"
        wpscan --update
        
    # === SUBDOMAIN TOOLS ===
    - name: Install subdomain tools
      run: |
        go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
        go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
        
    # === CONFIGURATION DU PATH ===
    - name: Setup environment paths
      run: |
        echo "PATH=$HOME/.local/bin:$(go env GOPATH)/bin:$HOME/.local/share/gem/ruby/3.2.0/bin:$PATH" >> $GITHUB_ENV
        
    # === LANCEMENT DES SCANS ===
    
    - name: Run Nuclei WordPress Scan
      run: |
        echo "🔍 Starting Nuclei WordPress Scan..."
        nuclei -u "${{ github.event.inputs.target_url }}" \
        -t http/technologies/wordpress/ \
        -t http/vulnerabilities/wordpress/ \
        -t http/misconfiguration/wordpress/ \
        -t http/vulnerabilities/wordpress-plugins/ \
        -t http/vulnerabilities/wordpress-themes/ \
        -t http/exposed-panels/wordpress/ \
        -severity medium,high,critical \
        -rate-limit 100 \
        -silent \
        -o nuclei-results.txt
      continue-on-error: true
    
    - name: Run WPScan
      run: |
        echo "🛡️ Starting WPScan..."
        wpscan --url "${{ github.event.inputs.target_url }}" \
        --enumerate vp,vt,tt,u,m \
        --plugins-detection mixed \
        --max-threads 10 \
        -t 3 \
        --random-user-agent \
        --format cli-no-colour \
        --output wpscan-results.txt
      env:
        WPSCAN_API_TOKEN: ${{ secrets.WPSCAN_API_TOKEN }}
      continue-on-error: true
    
    - name: Run Subdomain Discovery
      run: |
        echo "🌐 Starting Subdomain Discovery..."
        domain=$(echo "${{ github.event.inputs.target_url }}" | sed -e 's|^[^/]*//||' -e 's|/.*$||')
        
        subfinder -d $domain -silent > subdomains.txt || echo "Subfinder failed"
        if [ -s subdomains.txt ]; then
          httpx -l subdomains.txt -silent > live-subdomains.txt || echo "Httpx failed"
        else
          echo "No subdomains found" > live-subdomains.txt
        fi
        
    - name: Run Nikto Scan
      run: |
        echo "🚨 Starting Nikto..."
        domain=$(echo "${{ github.event.inputs.target_url }}" | sed -e 's|^[^/]*//||' -e 's|/.*$||')
        nikto -h $domain -o nikto-results.txt || echo "Nikto scan completed"
        
    - name: Run Nmap WordPress Scan
      run: |
        echo "📡 Starting Nmap WordPress Scan..."
        domain=$(echo "${{ github.event.inputs.target_url }}" | sed -e 's|^[^/]*//||' -e 's|/.*$||')
        nmap -p 80,443 --script http-wordpress-enum,http-wordpress-users $domain > nmap-results.txt 2>&1 || echo "Nmap scan completed"
    
    - name: Run Nuclei Full Scan
      run: |
        echo "🔍 Starting Nuclei Full Scan..."
        nuclei -u "${{ github.event.inputs.target_url }}" \
        -t http/technologies/ \
        -t http/misconfiguration/ \
        -t http/exposures/ \
        -t http/exposed-panels/ \
        -severity high,critical \
        -rate-limit 50 \
        -silent \
        -o nuclei-full-results.txt
      continue-on-error: true
        
    - name: Generate Security Report
      run: |
        echo "# 🔒 RAPPORT DE SÉCURITÉ WORDPRESS" > SECURITY-REPORT.md
        echo "## Scan réalisé le $(date)" >> SECURITY-REPORT.md
        echo "### Cible: ${{ github.event.inputs.target_url }}" >> SECURITY-REPORT.md
        echo "### Mode: ${{ github.event.inputs.scan_mode }}" >> SECURITY-REPORT.md
        echo "" >> SECURITY-REPORT.md
        
        echo "## 📊 RÉSULTATS" >> SECURITY-REPORT.md
        
        # Vulnérabilités critiques
        echo "### 🚨 VULNÉRABILITÉS CRITIQUES" >> SECURITY-REPORT.md
        if grep -q "critical" nuclei-*.txt 2>/dev/null; then
          grep "critical" nuclei-*.txt >> SECURITY-REPORT.md
        else
          echo "✅ Aucune vulnérabilité critique trouvée" >> SECURITY-REPORT.md
        fi
        echo "" >> SECURITY-REPORT.md
        
        # Vulnérabilités haute
        echo "### ⚠️ VULNÉRABILITÉS HAUTE" >> SECURITY-REPORT.md
        if grep -q "high" nuclei-*.txt 2>/dev/null; then
          grep "high" nuclei-*.txt | head -10 >> SECURITY-REPORT.md
        else
          echo "✅ Aucune vulnérabilité haute trouvée" >> SECURITY-REPORT.md
        fi
        echo "" >> SECURITY-REPORT.md
        
        # WPScan Results
        echo "### 🛡️ WPSCAN RÉSULTATS" >> SECURITY-REPORT.md
        if [ -s wpscan-results.txt ]; then
          echo "**Plugins vulnérables:**" >> SECURITY-REPORT.md
          grep -i "vulnerability" wpscan-results.txt | head -5 >> SECURITY-REPORT.md || echo "Aucun plugin vulnérable identifié" >> SECURITY-REPORT.md
          echo "" >> SECURITY-REPORT.md
          echo "**Utilisateurs trouvés:**" >> SECURITY-REPORT.md
          grep -i "admin\|user" wpscan-results.txt | head -3 >> SECURITY-REPORT.md || echo "Aucun utilisateur identifié" >> SECURITY-REPORT.md
        else
          echo "Scan WPScan complété" >> SECURITY-REPORT.md
        fi
        echo "" >> SECURITY-REPORT.md
        
        # Sous-domaines
        echo "### 🌐 SOUS-DOMAINES" >> SECURITY-REPORT.md
        if [ -s live-subdomains.txt ]; then
          echo "**Sous-domaines actifs:**" >> SECURITY-REPORT.md
          cat live-subdomains.txt >> SECURITY-REPORT.md
        else
          echo "Aucun sous-domaine trouvé" >> SECURITY-REPORT.md
        fi
        
        # Statistiques
        echo "" >> SECURITY-REPORT.md
        echo "## 📈 STATISTIQUES" >> SECURITY-REPORT.md
        critical_count=$(grep -r "critical" nuclei-*.txt 2>/dev/null | wc -l)
        high_count=$(grep -r "high" nuclei-*.txt 2>/dev/null | wc -l)
        echo "- **Vulnérabilités critiques:** $critical_count" >> SECURITY-REPORT.md
        echo "- **Vulnérabilités haute:** $high_count" >> SECURITY-REPORT.md
        echo "- **Sous-domaines trouvés:** $(cat live-subdomains.txt 2>/dev/null | wc -l)" >> SECURITY-REPORT.md
        
    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: wp-scan-results-${{ github.run_id }}
        path: |
          SECURITY-REPORT.md
          *.txt
        retention-days: 7
        
    - name: Scan Complete
      if: always()
      run: |
        echo "✅ SCAN TERMINÉ !"
        echo "🎯 Cible: ${{ github.event.inputs.target_url }}"
        echo "📊 Rapport généré dans les artifacts"
